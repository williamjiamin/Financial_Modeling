Public Function my_portfolio_variance(weight_vector, variance_covariance_matrix)    Dim middle_vector As Variant    If Application.Count(weight_vector) = variance_covariance_matrix.Rows.Count Then        If weight_vector.Columns.Count > weight_vector.Rows.Count Then            weight_vector = weight_vector        Else            weight_vector = Application.Transpose(weight_vector)        End If        middle_vector = Application.MMult(weight_vector, variance_covariance_matrix)        my_portfolio_variance = Application.SumProduct(middle_vector, weight_vector)    Else        my_portfolio_variance = "What the heck is that!!!"    End IfEnd FunctionPublic Function twoassets(r1, r2, sig1, A)    twoassets = (r1 - r2) / (A * sig1 ^ 2)End FunctionPublic Function twoassets2(r1, r2, rf, sig1, sig2, corr12, A)    Dim cov12, var1, var2, minvarw, w, xr1, xr2    cov12 = corr12 * sig1 * sig2    var1 = sig1 ^ 2    var2 = sig2 ^ 2    If rf <= 0 Then        minvarw = (var2 - cov12) / (var1 + var2 - 2 * cov12)        w = minvarw + (r1 - r2) / (A * (var1 + var2 - 2 * cov12))    Else        xr1 = r1 - rf        xr2 = r2 - rf        w = (xr1 * var2 - xr2 * cov12) / (xr1 * var2 + xr2 * var1 - (xr1 + xr2) * cov12)    End If    twoassets2 = wEnd FunctionPublic Function one_shot(r1, r2, rf, sig1, sig2, corr12, A)    Dim w0, w1, w2, r_p, sig_p    w1 = twoassets2(r1, r2, rf, sig1, sig2, corr12, A)    w2 = 1 - w1        r_p = w1 * r1 + w2 * r2    sig_p = Sqr(w1 ^ 2 * sig1 ^ 2 + w2 ^ 2 * sig2 ^ 2 + 2 * w1 * w2 * sig1 * sig2 * corr12)        w0 = 1 - twoassets(r_p, rf, sig_p, A)    w1 = (1 - w0) * w1    w2 = (1 - w0) * w2        one_shot = Application.Transpose(Array(w0, w1, w2))    End Function